import Link from 'next/link'

// TODO: Fetch animals from Supabase
const animals = [
  { id: 'baron', name: '–ë–∞—Ä–æ–Ω', age: '3 –≥–æ–¥–∞', gender: '–º–∞–ª—å—á–∏–∫', status: 'ready', tags: ['–ê–∫—Ç–∏–≤–Ω—ã–π', '–£–º–Ω—ã–π', '–ö—Ä—É–ø–Ω—ã–π'], description: '–ë–ª–∞–≥–æ—Ä–æ–¥–Ω—ã–π –∏ —É–º–Ω—ã–π –ø–µ—Å, –∫–æ—Ç–æ—Ä—ã–π –æ–±–æ–∂–∞–µ—Ç –¥–æ–ª–≥–∏–µ –ø—Ä–æ–≥—É–ª–∫–∏ –∏ —É–∂–µ –Ω–∞—É—á–∏–ª—Å—è –∏–≥—Ä–∞—Ç—å —Å –º—è—á–∏–∫–æ–º.', image: 'üêï' },
  { id: 'lada', name: '–õ–∞–¥–∞', age: '2 –≥–æ–¥–∞', gender: '–¥–µ–≤–æ—á–∫–∞', status: 'adapting', tags: ['–õ–∞—Å–∫–æ–≤–∞—è', '–°–ø–æ–∫–æ–π–Ω–∞—è', '–°—Ä–µ–¥–Ω—è—è'], description: '–ù–µ–∂–Ω–∞—è –∏ –ª–∞—Å–∫–æ–≤–∞—è –¥–µ–≤–æ—á–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–ª—è —Å–µ–±—è —Ä–∞–¥–æ—Å—Ç–∏ –º–∏—Ä–Ω–æ–π –∂–∏–∑–Ω–∏.', image: 'üêï‚Äçü¶∫' },
  { id: 'rex', name: '–†–µ–∫—Å', age: '5 –ª–µ—Ç', gender: '–º–∞–ª—å—á–∏–∫', status: 'special', tags: ['–ú—É–¥—Ä—ã–π', '–°–ø–æ–∫–æ–π–Ω—ã–π', '–ö—Ä—É–ø–Ω—ã–π'], description: '–ú—É–¥—Ä—ã–π –∏ —Å–ø–æ–∫–æ–π–Ω—ã–π –ø–µ—Å, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏–¥–µ–∞–ª—å–Ω—ã–º –∫–æ–º–ø–∞–Ω—å–æ–Ω–æ–º –¥–ª—è —Ç–∏—Ö–∏—Ö —Å–µ–º–µ–π.', image: 'ü¶Æ' },
  { id: 'maya', name: '–ú–∞–π—è', age: '1 –≥–æ–¥', gender: '–¥–µ–≤–æ—á–∫–∞', status: 'ready', tags: ['–ò–≥—Ä–∏–≤–∞—è', '–≠–Ω–µ—Ä–≥–∏—á–Ω–∞—è', '–ú–∞–ª–µ–Ω—å–∫–∞—è'], description: '–ú–æ–ª–æ–¥–∞—è –∏ –∂–∏–∑–Ω–µ—Ä–∞–¥–æ—Å—Ç–Ω–∞—è —Å–æ–±–∞—á–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –≥–æ—Ç–æ–≤–∞ —Å—Ç–∞—Ç—å –ª—É—á—à–∏–º –¥—Ä—É–≥–æ–º –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ–º—å–∏.', image: 'üê∂' },
  { id: 'graf', name: '–ì—Ä–∞—Ñ', age: '4 –≥–æ–¥–∞', gender: '–º–∞–ª—å—á–∏–∫', status: 'adapting', tags: ['–ë–ª–∞–≥–æ—Ä–æ–¥–Ω—ã–π', '–û—Å—Ç–æ—Ä–æ–∂–Ω—ã–π', '–°—Ä–µ–¥–Ω–∏–π'], description: '–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π –ø–µ—Å —Å –∞—Ä–∏—Å—Ç–æ–∫—Ä–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –º–∞–Ω–µ—Ä–∞–º–∏. –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É—á–∏—Ç—Å—è –¥–æ–≤–µ—Ä—è—Ç—å –ª—é–¥—è–º.', image: 'üêï‚Äçü¶∫' },
  { id: 'bella', name: '–ë–µ–ª–ª–∞', age: '3 –≥–æ–¥–∞', gender: '–¥–µ–≤–æ—á–∫–∞', status: 'ready', tags: ['–î—Ä—É–∂–µ–ª—é–±–Ω–∞—è', '–û–±—â–∏—Ç–µ–ª—å–Ω–∞—è', '–°—Ä–µ–¥–Ω—è—è'], description: '–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω–∞—è —Å–æ–±–∞–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ª–µ–≥–∫–æ –Ω–∞—Ö–æ–¥–∏—Ç –æ–±—â–∏–π —è–∑—ã–∫ —Å –ª—é–¥—å–º–∏ –∏ –¥—Ä—É–≥–∏–º–∏ –∂–∏–≤–æ—Ç–Ω—ã–º–∏.', image: 'üêï' },
];

const statusStyles: { [key: string]: string } = {
  ready: 'bg-green-100 text-green-800',
  adapting: 'bg-yellow-100 text-yellow-800',
  special: 'bg-purple-100 text-purple-800',
};

const statusText: { [key: string]: string } = {
  ready: 'üü¢ –ì–æ—Ç–æ–≤ –∫ —Å–µ–º—å–µ',
  adapting: 'üü° –ê–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è',
  special: 'üü£ –û—Å–æ–±—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏',
};

const Select = ({ label, options }: { label: string, options: string[] }) => (
  <div>
    <label className="block text-sm font-medium text-gray-700 mb-1">{label}</label>
    <select className="w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-secondary focus:border-secondary">
      {options.map(option => <option key={option}>{option}</option>)}
    </select>
  </div>
);

const AnimalCard = ({ animal }: { animal: typeof animals[0] }) => (
  <div className="bg-white rounded-lg shadow-md overflow-hidden transition-all duration-300 hover:shadow-xl hover:-translate-y-1">
    <div className="w-full h-48 bg-gray-200 flex items-center justify-center text-5xl relative">
      {animal.image}
      <div className={`absolute top-3 right-3 px-2 py-1 text-xs font-semibold rounded-full text-white ${statusStyles[animal.status]}`}>
        {statusText[animal.status]}
      </div>
    </div>
    <div className="p-4">
      <div className="flex justify-between items-start mb-2">
        <div>
          <h3 className="text-lg font-bold text-gray-900">{animal.name}</h3>
          <p className="text-sm text-gray-500">{`${animal.age}, ${animal.gender}`}</p>
        </div>
        <button className="p-2 rounded-full hover:bg-gray-100 text-gray-400 hover:text-red-500 transition">
          <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M4.318 6.318a4.5 4.5 0 016.364 0L12 7.5l1.318-1.182a4.5 4.5 0 116.364 6.364L12 21l-7.682-7.682a4.5 4.5 0 010-6.364z"></path></svg>
        </button>
      </div>
      <div className="flex flex-wrap gap-2 mb-3">
        {animal.tags.map(tag => (
          <span key={tag} className="px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded-md">{tag}</span>
        ))}
      </div>
      <p className="text-sm text-gray-700 mb-4 h-10">{animal.description}</p>
      <div className="flex gap-3">
        <Link href={`/animals/${animal.id}`} className="flex-1 text-center px-4 py-2 bg-primary text-white font-semibold rounded-full hover:bg-opacity-90 transition">
          –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ
        </Link>
        <button className="flex-1 text-center px-4 py-2 bg-gray-100 text-gray-700 font-semibold rounded-full hover:bg-gray-200 transition">
          –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
        </button>
      </div>
    </div>
  </div>
);

export default function AnimalsPage() {
  return (
    <>
      {/* Page Header */}
      <div className="bg-white border-b border-gray-200">
        <div className="container mx-auto px-4 py-3">
          <div className="flex items-center gap-2 text-sm text-gray-500">
            <Link href="/" className="hover:text-primary">–ì–ª–∞–≤–Ω–∞—è</Link>
            <span>/</span>
            <span>–ù–∞—à–∏ –∂–∏–≤–æ—Ç–Ω—ã–µ</span>
          </div>
        </div>
      </div>

      {/* Filters Section */}
      <section className="bg-white py-6 border-b border-gray-200">
        <div className="container mx-auto px-4">
          <div className="flex justify-between items-center mb-4">
            <p className="text-sm text-gray-600">–ù–∞–π–¥–µ–Ω–æ: {animals.length} –∂–∏–≤–æ—Ç–Ω—ã—Ö</p>
            <button className="px-4 py-2 text-sm font-medium text-secondary border border-secondary rounded-md hover:bg-secondary hover:text-white transition">
              –§–∏–ª—å—Ç—Ä—ã
            </button>
          </div>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <Select label="–°—Ç–∞—Ç—É—Å" options={['–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã', '–ì–æ—Ç–æ–≤ –∫ —Å–µ–º—å–µ', '–ê–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è', '–û—Å–æ–±—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏']} />
            <Select label="–í–æ–∑—Ä–∞—Å—Ç" options={['–õ—é–±–æ–π –≤–æ–∑—Ä–∞—Å—Ç', '–©–µ–Ω–æ–∫', '–ú–æ–ª–æ–¥–æ–π', '–í–∑—Ä–æ—Å–ª—ã–π', '–ü–æ–∂–∏–ª–æ–π']} />
            <Select label="–†–∞–∑–º–µ—Ä" options={['–õ—é–±–æ–π —Ä–∞–∑–º–µ—Ä', '–ú–∞–ª–µ–Ω—å–∫–∏–π', '–°—Ä–µ–¥–Ω–∏–π', '–ö—Ä—É–ø–Ω—ã–π']} />
            <Select label="–ü–æ–ª" options={['–õ—é–±–æ–π', '–ú–∞–ª—å—á–∏–∫', '–î–µ–≤–æ—á–∫–∞']} />
          </div>
        </div>
      </section>

      {/* Animals Grid */}
      <section className="py-12 bg-gray-50">
        <div className="container mx-auto px-4">
          <div className="grid sm:grid-cols-2 lg:grid-cols-3 gap-8">
            {animals.map(animal => (
              <AnimalCard key={animal.id} animal={animal} />
            ))}
          </div>
          
          {/* Pagination */}
          <div className="flex justify-center items-center gap-2 mt-12">
            <button className="px-4 py-2 text-sm font-medium text-gray-400 bg-gray-100 border border-gray-200 rounded-md cursor-not-allowed">
              ‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∞—è
            </button>
            <button className="px-4 py-2 text-sm font-medium text-secondary bg-white border-2 border-secondary rounded-md shadow-sm">
              1
            </button>
            <button className="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50">
              2
            </button>
            <button className="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50">
              –°–ª–µ–¥—É—é—â–∞—è ‚Üí
            </button>
          </div>
        </div>
      </section>
    </>
  )
}
